@model Bonobo.Git.Server.Models.RepositoryDetailModel
@{
    Layout = null;
    ViewBag.Title = Resources.Repository_Detail_Title;
}
@if (Model != null)
{
    <div class="pure-form pure-form-aligned detail">
        <fieldset>
            <div class="sidebar-bordergrid top">
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Description)
                    <div class="sidebar-text">
                        @Model.Description
                    </div>
                </div>
            </div>
            <div class="sidebar-bordergrid">
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Group)
                    <div class="sidebar-text">
                        @Model.Group
                    </div>
                </div>
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Users)
                    <div class="sidebar-text">
                        @for (int i = 0; i < Model.Users.Length; i++)
                        {
                            @Html.ActionLink(@Model.Users[i].DisplayName, "Detail", "Account", new { id = @Model.Users[i].Id }, new { title = @Model.Users[i].Username })
                            if (i + 1 != Model.Users.Length)
                            {
                                <text>, </text>
                            }
                        }
                    </div>
                </div>
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Administrators)
                    <div class="sidebar-text">
                        @for (int i = 0; i < Model.Administrators.Length; i++)
                        {
                            @Html.ActionLink(@Model.Administrators[i].DisplayName, "Detail", "Account", new { id = @Model.Administrators[i].Id }, new { title = @Model.Administrators[i].Username })
                            if (i + 1 != Model.Administrators.Length)
                            {
                                <text>, </text>
                            }
                        }
                    </div>
                </div>
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Teams)
                    <div class="sidebar-text">
                        @for (int i = 0; i < Model.Teams.Length; i++)
                        {
                            @Html.ActionLink(@Model.Teams[i].DisplayName, "Detail", "Team", new { id = @Model.Teams[i].Id }, null)
                            if (i + 1 != Model.Teams.Length)
                            {
                                <text>, </text>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="sidebar-bordergrid">
                <div class="pure-control-group">
                    <label><i class="fa-regular fa-square@(Model.AllowAnonymous? "-check": "")" title="@(Model.AllowAnonymous? "Yes": "No")"></i> Anonymous</label>
                </div>
                @if (Model.AllowAnonymous)
                {
                    <div class="pure-control-group">
                        @{
                            bool global = Model.AllowAnonymousPush.Equals(Bonobo.Git.Server.Data.RepositoryPushMode.Global);
                            bool currentGlobal = UserConfiguration.Current.AllowAnonymousPush;
                            bool currentLocal = Model.AllowAnonymousPush.Equals(Bonobo.Git.Server.Data.RepositoryPushMode.Yes);
                            <label><i class="fa-regular fa-square@(global? (currentGlobal? "-check": ""): (currentLocal? "-check": ""))" title="@(global? (currentGlobal? "Yes": "No"): (currentLocal? "Yes": "No"))"></i> Anonymous Push</label>
                        }
                    </div>
                }

                @if (Model.AreRegexLinksVisible)
                {
                    <div class="pure-control-group">
                        <label><i class="fa-regular fa-square@(Model.LinksUseGlobal? "-check": "")" title="@(Model.LinksUseGlobal? "Yes": "No")"></i> Use Global Linkify Settings</label>
                    </div>

                    if (!Model.LinksUseGlobal)
                    {
                        <div class="pure-control-group">
                            @Html.LabelFor(m => m.LinksRegex)
                            <div class="sidebar-text">
                                @Html.TextBoxFor(m => m.LinksRegex, new { @readonly = "", @class = "removeVisualInput" })
                            </div>
                        </div>
                        <div class="pure-control-group">
                            @Html.LabelFor(m => m.LinksUrl)
                            <div class="sidebar-text">
                                @Html.TextBoxFor(m => m.LinksUrl, new { @readonly = "", @class = "removeVisualInput" })
                            </div>
                        </div>
                    }
                }
                @if (AppSettings.IsPushAuditEnabled)
                {
                    <div class="pure-control-group">
                        @Html.LabelFor(m => m.AuditPushUser)
                        @(Model.AuditPushUser? @Resources.Repository_Detail_Yes: @Resources.Repository_Detail_No)
                    </div>
                }
            </div>
            <div class="sidebar-bordergrid">
                <div>
                    @foreach (ThirdPartyModel ThirdParty in Model.ThirdPartyComponents)
                    {
                        <div class="pure-control-group">
                            <label>
                                Component Name
                            </label>
                            <div class="sidebar-text">
                                <input class="removeVisualInput" value="@ThirdParty.ComponentName" readonly />
                            </div>
                        </div>
                        <div class="pure-control-group">
                            <label>
                                Version In Use
                            </label>
                            <div class="sidebar-text">
                                <input class="removeVisualInput" value="@ThirdParty.VersionInUse" readonly />
                            </div>
                        </div>
                        <div class="pure-control-group">
                            <label>
                                Date Updated
                            </label>
                            <div class="sidebar-text">
                                <input class="removeVisualInput" value="@ThirdParty.DateUpdated" readonly />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="sidebar-bordergrid bottom" @*id="bottomBar"*@>
                @if (Model.ServiceAccounts.Count > 0)
                {
                    foreach (Bonobo.Git.Server.Data.ServiceAccount serviceAccount in Model.ServiceAccounts)
                    {
                        <div class="pure-control-group">
                            <label>
                                Service Account Name
                            </label>
                            <div class="sidebar-text">
                                <input class="removeVisualInput" value="@serviceAccount.ServiceAccountName" readonly />
                            </div>
                        </div>
                        <div class="pure-control-group">
                            <label>
                                In Password Manager
                            </label>
                            <div class="sidebar-text">
                                @if (@serviceAccount.InPassManager == true)
                                {
                                    <input class="removeVisualInput" value="Yes" readonly />
                                }
                                else
                                {
                                    <input class="removeVisualInput" value="No" readonly />
                                }
                            </div>
                        </div>
                        <div class="pure-control-group">
                            <label>
                                Password Last Updated
                            </label>
                            <div class="sidebar-text">
                                <input class="removeVisualInput" value="@serviceAccount.PassLastUpdated" readonly />
                            </div>
                        </div>
                    }
                }

            </div>

        </fieldset>
    </div>
}

@section scripts
{
    <script>new Clipboard('.copy-to-clip-button');</script>
}
