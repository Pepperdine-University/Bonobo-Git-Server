@model Bonobo.Git.Server.Models.RepositoryDetailModel
@{
    Layout = null;
    ViewBag.Title = Resources.Repository_Detail_Title;
}
@if (Model != null)
{
    <div class="pure-form pure-form-aligned detail">
        <fieldset>
            @*<div class="pure-control-group">
            @Html.LabelFor(m => m.Name)
            @Model.Name
            @switch (Model.Status)
            {
                case RepositoryDetailStatus.Valid:
                    break;
                case RepositoryDetailStatus.Missing:
                    <span class="status">(Missing)</span>
                    break;
                case RepositoryDetailStatus.Unknown:
                default:
                <span class="status">(Status Unknown)</span>
                    break;
            }
        </div>*@
            @*          <div class="pure-control-group">
            <label>@Resources.Repository_Detail_Location</label>
            <button class="pure-button copy-to-clip-button" data-clipboard-target=".git-url-text"><i class="fa fa-copy"></i>@Resources.Copy</button>
            <span class="git-url-text">@Model.GitUrl</span>
        </div>

        @if (User.Identity.IsAuthenticated) {
            <div class="pure-control-group">
                <label>
                    @Resources.Repository_Detail_Location_Personal
                </label>
                <button class="pure-button copy-to-clip-button" data-clipboard-target=".personal-url-text"><i class="fa fa-copy"></i>@Resources.Copy</button>
                <span class="personal-url-text">@Model.PersonalGitUrl</span>
            </div>
        }
            *@
            <div class="sidebar-bordergrid top">
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Description)
                    <div class="sidebar-text description">
                        @Model.Description
                    </div>
                </div>
            </div>
            <div class="sidebar-bordergrid">
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Group)
                    <div class="sidebar-text">
                        @Model.Group
                    </div>
                </div>
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Users)
                    <div class="sidebar-text">
                        @for (int i = 0; i < Model.Users.Length; i++)
                        {
                            @Html.ActionLink(@Model.Users[i].DisplayName, "Detail", "Account", new { id = @Model.Users[i].Id }, new { title = @Model.Users[i].Username })
                            if (i + 1 != Model.Users.Length)
                            {
                                <text>, </text>
                            }
                        }
                    </div>
                </div>
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Administrators)
                    <div class="sidebar-text">
                        @for (int i = 0; i < Model.Administrators.Length; i++)
                        {
                            @Html.ActionLink(@Model.Administrators[i].DisplayName, "Detail", "Account", new { id = @Model.Administrators[i].Id }, new { title = @Model.Administrators[i].Username })
                            if (i + 1 != Model.Administrators.Length)
                            {
                                <text>, </text>
                            }
                        }
                    </div>
                </div>
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.Teams)
                    <div class="sidebar-text">
                        @for (int i = 0; i < Model.Teams.Length; i++)
                        {
                            @Html.ActionLink(@Model.Teams[i].DisplayName, "Detail", "Team", new { id = @Model.Teams[i].Id }, null)
                            if (i + 1 != Model.Teams.Length)
                            {
                                <text>, </text>
                            }
                        }
                    </div>
                </div>
            </div>
            <div class="sidebar-bordergrid">
                <div class="pure-control-group">
                    @if (Model.AllowAnonymous)
                    {
                        <label><i class="fa-regular fa-square-check" title="Yes"></i> Anonymous</label>
                    }
                    else
                    {
                        <label><i class="fa-regular fa-square" title="No"></i> Anonymous</label>
                    }
                </div>
                @if (Model.AllowAnonymous)
                {
                    <div class="pure-control-group">
                        @{
                            bool currentGlobal = UserConfiguration.Current.AllowAnonymousPush;
                            if (Model.AllowAnonymousPush.Equals(Bonobo.Git.Server.Data.RepositoryPushMode.Global))
                            {
                                if (currentGlobal)
                                {
                                    <label><i class="fa-regular fa-square-check" title="Yes"></i> Anonymous Push</label>
                                }
                                else
                                {
                                    <label><i class="fa-regular fa-square" title="No"></i> Anonymous Push</label>
                                }
                            }
                            else
                            {
                                if (Model.AllowAnonymousPush.Equals(Bonobo.Git.Server.Data.RepositoryPushMode.Yes))
                                {
                                    <label><i class="fa-regular fa-square-check" title="Yes"></i> Anonymous Push</label>
                                }
                                else
                                {
                                    <label><i class="fa-regular fa-square" title="No"></i> Anonymous Push</label>
                                }
                            }
                        }
                    </div>
                }

                @if (Model.AreRegexLinksVisible)
                {
                    <div class="pure-control-group">
                        @if (Model.LinksUseGlobal)
                        {
                            <label><i class="fa-regular fa-square-check" title="Yes"></i> Use Global Linkify Settings</label>
                        }
                        else
                        {
                            <label><i class="fa-regular fa-square" title="No"></i> Use Global Linkify Settings</label>
                        }
                    </div>

                    if (!Model.LinksUseGlobal)
                    {
                        <div class="pure-control-group">
                            @Html.LabelFor(m => m.LinksRegex)
                            <div class="sidebar-text">
                                @Html.TextBoxFor(m => m.LinksRegex, new { @readonly = "", @class = "sidebar-removeInput" })
                            </div>
                        </div>
                        <div class="pure-control-group">
                            @Html.LabelFor(m => m.LinksUrl)
                            <div class="sidebar-text">
                                @Html.TextBoxFor(m => m.LinksUrl, new { @readonly = "", @class = "sidebar-removeInput" })
                            </div>
                        </div>
                    }
                }
                @if (AppSettings.IsPushAuditEnabled)
                {
                    <div class="pure-control-group">
                        @Html.LabelFor(m => m.AuditPushUser)
                        @if (Model.AuditPushUser)
                        {
                            @Resources.Repository_Detail_Yes
                        }
                        else
                        {
                            @Resources.Repository_Detail_No
                        }
                    </div>
                }
            </div>
            <div class="sidebar-bordergrid">
                <div>
                    @foreach (ThirdPartyModel ThirdParty in Model.ThirdPartyComponents)
                    {
                        <div class="pure-control-group">
                            <label>
                                Component Name
                            </label>
                            <div class="sidebar-text">
                                <input class="sidebar-removeInput" value="@ThirdParty.ComponentName" readonly/>
                            </div>
                        </div>
                        <div class="pure-control-group">
                            <label>
                                Version In Use
                            </label>
                            <div class="sidebar-text">
                                <input class="sidebar-removeInput" value="@ThirdParty.VersionInUse" readonly />
                            </div>
                        </div>
                        <div class="pure-control-group">
                            <label>
                                Date Updated
                            </label>
                            <div class="sidebar-text">
                                <input class="sidebar-removeInput" value="@ThirdParty.DateUpdated" readonly />
                            </div>
                        </div>
                    }
                </div>
            </div>
            <div class="sidebar-bordergrid bottom">
                @foreach (RepositoryServiceAccountModel ServiceAccount in Model.ServiceAccountsTracking)
                {
                    <div class="pure-control-group">
                        <label>
                            Service Account Name
                        </label>
                        <div class="sidebar-text">
                            <input class="sidebar-removeInput" value="@ServiceAccount.AccountName" readonly />
                        </div>
                    </div>
                    <div class="pure-control-group">
                        <label>
                            In Password Manager
                        </label>
                        <div class="sidebar-text">
                            @if (@ServiceAccount.IsPassManager == true)
                            {
                                <input class="sidebar-removeInput" value="Yes" readonly />
                            }
                            else
                            {
                                <input class="sidebar-removeInput" value="No" readonly />
                            }
                        </div>
                    </div>
                    <div class="pure-control-group">
                        <label>
                            Password Last Updated
                        </label>
                        <div class="sidebar-text">
                            <input class="sidebar-removeInput" value="@ServiceAccount.PassLastChanged" readonly />
                        </div>
                    </div>
                }
            </div>

        </fieldset>
    </div>
}

@section scripts
{
    <script>new Clipboard('.copy-to-clip-button');</script>
}
