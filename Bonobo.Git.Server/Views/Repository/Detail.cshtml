@model Bonobo.Git.Server.Models.RepositoryDetailModel
@{
    Layout = null;
    ViewBag.Title = Resources.Repository_Detail_Title;
}
@if (Model != null)
{
<div class="pure-form pure-form-aligned detail">
    <fieldset>
        <div class="sidebar-bordergrid top">
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Description)
                <div class="sidebar-text">
                    @Model.Description
                </div>
            </div>
        </div>
        <div class="sidebar-bordergrid">
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Group)
                <div class="sidebar-text">
                    @Model.Group
                </div>
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Users)
                <div class="sidebar-text">
                    @for (int i = 0; i < Model.Users.Length; i++)
                    {
                    @Html.ActionLink(@Model.Users[i].DisplayName, "Detail", "Account", new { id = @Model.Users[i].Id }, new { title = @Model.Users[i].Username })
                        if (i + 1 != Model.Users.Length)
                        {
                    <text>, </text>
                        }
                    }
                </div>
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Administrators)
                <div class="sidebar-text">
                    @for (int i = 0; i < Model.Administrators.Length; i++)
                    {
                    @Html.ActionLink(@Model.Administrators[i].DisplayName, "Detail", "Account", new { id = @Model.Administrators[i].Id }, new { title = @Model.Administrators[i].Username })
                        if (i + 1 != Model.Administrators.Length)
                        {
                    <text>, </text>
                        }
                    }
                </div>
            </div>
            <div class="pure-control-group">
                @Html.LabelFor(m => m.Teams)
                <div class="sidebar-text">
                    @for (int i = 0; i < Model.Teams.Length; i++)
                    {
                    @Html.ActionLink(@Model.Teams[i].DisplayName, "Detail", "Team", new { id = @Model.Teams[i].Id }, null)
                        if (i + 1 != Model.Teams.Length)
                        {
                    <text>, </text>
                        }
                    }
                </div>
            </div>
        </div>
        <div class="sidebar-bordergrid">
            <div class="pure-control-group">
                <label><i class="fa fa-@(Model.AllowAnonymous? "check-": "")square-o" title="@(Model.AllowAnonymous? "Yes": "No")"></i> Anonymous</label>
            </div>
            @if (Model.AllowAnonymous)
            {
            <div class="pure-control-group">
                @{
                        bool pushMode = Model.AllowAnonymousPush == Bonobo.Git.Server.Data.RepositoryPushMode.Yes
                                        || (Model.AllowAnonymousPush == Bonobo.Git.Server.Data.RepositoryPushMode.Global && UserConfiguration.Current.AllowAnonymousPush);
                    <label><i class="fa fa-@(pushMode? "check-": "")square-o" title="@(pushMode? "Yes": "No")"></i> Anonymous Push</label>
                }
            </div>
            }

            @if (Model.AreRegexLinksVisible)
            {
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.LinksRegex)
                    <div class="sidebar-text">
                        @Html.TextBoxFor(m => m.LinksRegex, new { @readonly = "", @class = "removeVisualInput" })
                    </div>
                </div>
                <div class="pure-control-group">
                    @Html.LabelFor(m => m.LinksUrl)
                    <div class="sidebar-text">
                        @Html.TextBoxFor(m => m.LinksUrl, new { @readonly = "", @class = "removeVisualInput" })
                    </div>
                </div>
            }
            @if (AppSettings.IsPushAuditEnabled)
            {
            <div class="pure-control-group">
                @Html.LabelFor(m => m.AuditPushUser)
                @(Model.AuditPushUser? @Resources.Repository_Detail_Yes: @Resources.Repository_Detail_No)
            </div>
            }
        </div>
        <div class="sidebar-bordergrid">
            @Html.LabelFor(m => m.ServiceAccounts)
            @if (@Model.ServiceAccounts.Count > 0)
            {
                foreach (Bonobo.Git.Server.Data.ServiceAccount serviceAccount in Model.ServiceAccounts)
                {
                    <details>
                        <summary>
                            <div class="sidebar-text">
                                <input class="removeVisualInput" value="@serviceAccount.ServiceAccountName" readonly />
                            </div>
                        </summary>
                        <div class="pass-info">
                            <div class="pure-control-group">
                                <div>
                                        <label><i class="fa fa-@(serviceAccount.InPassManager ? "check-" : "")square-o"></i> @Resources.ServiceAccount_InPassManager </label>
                                </div>
                            </div>
                            <div class="pure-control-group">
                                <label>@Resources.ServiceAccount_PassLastUpdated</label>
                                <div class="sidebar-text">
                                    @{ if (serviceAccount.PassLastUpdated != null)
                                        {
                                            <input class="removeVisualInput" value="@serviceAccount.PassLastUpdated.ToString().Split(' ')[0]" readonly />

                                        }
                                        else
                                        {
                                            <input class="removeVisualInput" value="@Resources.Unknown" readonly />
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </details>
                }
            }

        </div>

        <div class="sidebar-bordergrid bottom">
            @Html.LabelFor(m => m.Dependencies)
            <div>
                @foreach (Bonobo.Git.Server.Data.Dependency dependency in Model.Dependencies)
                {
                    <details class="dependency-details">
                        <summary>
                            <div class="sidebar-text">
                                @{
                                    string versionInUseMajorMinorPatchFormat = "";
                                    if (dependency.VersionInUse != null)
                                    {
                                        string[] versionInUseParts = dependency.VersionInUse.Split('.');
                                        switch (versionInUseParts.Length)
                                        {
                                            case 1:
                                                versionInUseMajorMinorPatchFormat = $"({versionInUseParts[(0)]})";
                                                break;
                                            case 2:
                                                versionInUseMajorMinorPatchFormat = $"({versionInUseParts[(0)]})";
                                                break;
                                            case 3:
                                                versionInUseMajorMinorPatchFormat = $"({versionInUseParts[0]}.{versionInUseParts[1]}.{versionInUseParts[2]})";
                                                break;
                                        }
                                    }
                                }
                                <label for="@dependency.Id" type="text" class="removeVisualInput dependency-label " readonly> @dependency.KnownDependency.ComponentName</label><input class="removeVisualInput overflow-ellipsis" value="@versionInUseMajorMinorPatchFormat" readonly="readonly">
                                <input type="text" id="@dependency.Id" value="@dependency.KnownDependency.ComponentName" hidden>
                            </div>
                        </summary>
                        <div class="pass-info">
                            <div class="pure-control-group">
                                <label> @Resources.Dependencies_DateUpdated </label>
                                <div class="sidebar-text">
                                    @{
                                        if (dependency.DateUpdated != null)
                                        {
                                            <input class="removeVisualInput" value="@dependency.DateUpdated.ToString().Split(' ')[0]" readonly />

                                        }
                                        else
                                        {
                                            <input class="removeVisualInput" value="@Resources.Unknown" readonly />
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </details>
                }

            </div>
        </div>
    </fieldset>
</div>
}

                @section scripts
{
                    <script>new Clipboard('.copy-to-clip-button');</script>
                }
